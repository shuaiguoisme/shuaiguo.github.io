<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>帅锅</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-03T22:47:23.127Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr Kong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>es6标准入门第2版</title>
    <link href="http://yoursite.com/2016/04/04/es6%E6%A0%87%E5%87%86%E5%85%A5%E9%97%A8%E7%AC%AC2%E7%89%88/"/>
    <id>http://yoursite.com/2016/04/04/es6标准入门第2版/</id>
    <published>2016-04-03T16:23:46.000Z</published>
    <updated>2016-04-03T22:47:23.127Z</updated>
    
    <content type="html">&lt;p&gt;最近项目要用到es6，之前看过一些，没办法，这周必须把阮博士的大作消化掉&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目要用到es6，之前看过一些，没办法，这周必须把阮博士的大作消化掉&lt;/p&gt;

    
    </summary>
    
      <category term="2016年阅读书单" scheme="http://yoursite.com/categories/2016%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/"/>
    
      <category term="4月" scheme="http://yoursite.com/categories/2016%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/4%E6%9C%88/"/>
    
    
      <category term="JavaScript ES6" scheme="http://yoursite.com/tags/JavaScript-ES6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript高级程序设计读书笔记</title>
    <link href="http://yoursite.com/2016/04/04/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/04/04/JavaScript高级程序设计读书笔记/</id>
    <published>2016-04-03T16:05:20.000Z</published>
    <updated>2016-04-03T16:21:47.638Z</updated>
    
    <content type="html">&lt;p&gt;之前看&lt;a href=&quot;http://haoqiao.me/2016/02/25/book-list-of-2016.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;临水照影的博客&lt;/font&gt;&lt;/a&gt;有所感悟，感觉学习新技术不能只看视频，一本好书胜过百G视频，《JavaScript高级程序设计》这本书我买了好久，但是一直没有时间看，不是工作忙没有时间看，是自己懒症犯了，把时间都拿去刷美剧了，现在争取一周一本书，把时间充分利用起来!!!&lt;br&gt;自己平时要上班，时间大都是早晚、中午吃饭时间，上下班坐地铁的时候，所以我不可能装着一大本js书边捧着边看，这里向我同事Mr Zhang学习下，他之前有本《JavaScript权威指南》那本书比我这本厚多了，他把书撕成一章一章，方便携带，有时间的时候就看会，没多久一本js大字典就让他啃完了，技术打的也是相当牢固，撕书不好，但是书买来不看才是大罪过。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前看&lt;a href=&quot;http://haoqiao.me/2016/02/25/book-list-of-2016.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;临水照影的博客&lt;/font&gt;&lt;/a&gt;有所感悟
    
    </summary>
    
      <category term="2016年阅读书单" scheme="http://yoursite.com/categories/2016%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/"/>
    
      <category term="4月" scheme="http://yoursite.com/categories/2016%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95/4%E6%9C%88/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="http://yoursite.com/2016/04/03/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/04/03/hexo-github搭建个人博客/</id>
    <published>2016-04-03T12:39:06.000Z</published>
    <updated>2016-04-03T22:51:53.290Z</updated>
    
    <content type="html">&lt;h2 id=&quot;hexo安装使用&quot;&gt;&lt;a href=&quot;#hexo安装使用&quot; class=&quot;headerlink&quot; title=&quot;hexo安装使用&quot;&gt;&lt;/a&gt;hexo安装使用&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架，Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;h3 id=&quot;hexo安装&quot;&gt;&lt;a href=&quot;#hexo安装&quot; class=&quot;headerlink&quot; title=&quot;hexo安装&quot;&gt;&lt;/a&gt;hexo安装&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://hexo.io/zh-cn/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网文档&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;pc安装node&lt;/li&gt;
&lt;li&gt;执行：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo init myblog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd myblog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install 后面不加应用名的话，npm会把当前目录当成node的一个包，会去读当前&lt;br&gt;目录下的package.json,会把package.json里的dependencies下面的依赖加载到node-module里&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在浏览器输入：&lt;a href=&quot;http://127.0.0.1:4000即可浏览博客&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:4000即可浏览博客&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;配置文件&lt;/h3&gt;&lt;p&gt;_config.yml&lt;/p&gt;
&lt;h3 id=&quot;写作&quot;&gt;&lt;a href=&quot;#写作&quot; class=&quot;headerlink&quot; title=&quot;写作&quot;&gt;&lt;/a&gt;写作&lt;/h3&gt;&lt;p&gt;在执行&lt;font color=&quot;blue&quot;&gt;hexo init myblog&lt;/font&gt;后会在当前文件夹下生成myblog文件夹，里面目录和文件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scaffold:  模板文件，其中post.md是写文章的模板&lt;/li&gt;
&lt;li&gt;source:  _post目录下方文章源文件，写的文章就放在这里，比如：文章1.md&lt;/li&gt;
&lt;li&gt;themes: 主题文件，这里面放的都是跟主题有关的文件&lt;/li&gt;
&lt;li&gt;.gitignore: git的忽略文件，这里面配置的是需要忽略的文件&lt;/li&gt;
&lt;li&gt;_config.yml 是配置文件，配置博客的相关信息&lt;/li&gt;
&lt;li&gt;package.json: node应用的版本信息，依赖（所依赖的文件在node-module里）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;执行:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new 我的第一篇文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#或者：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new post 我的第一个文章&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时会在source文件夹下自动生成&lt;font color=&quot;blue&quot;&gt;我的第一篇文章.md&lt;/font&gt; ，使用编辑器打开&lt;font color=&quot;blue&quot;&gt;我的第一篇文章.md&lt;/font&gt;，设置标签和分类，具体写法请参照&lt;a href=&quot;http://hexo.io/zh-cn/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网文档&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 我的第一篇文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-04-03 10:16:25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 前端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 后端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 技术&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我的第一次写博客&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;hexo也可以设置多层子类:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;期望的层级结构:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	技术&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		前端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		后端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		UED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	生活&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		摄影&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		美食&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;新建文章&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new JavaScript.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;font color=&quot;blue&quot;&gt;source&amp;gt;_posts&amp;gt;JavaScript.md&lt;/font&gt;中设置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: JavaScript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-04-03 10:16:25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	- JavaScript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	- 技术&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	- 前端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	- JavaScript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JavaScript&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;模板文件&quot;&gt;&lt;a href=&quot;#模板文件&quot; class=&quot;headerlink&quot; title=&quot;模板文件&quot;&gt;&lt;/a&gt;模板文件&lt;/h3&gt;&lt;p&gt;scaffold文件夹下放置的是页面的模板，如果想生成新文章带有不同的样式，可以去&lt;font color=&quot;blue&quot;&gt;scaffold&amp;gt;post.md&lt;/font&gt;里去设置&lt;br&gt;生成新页面:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page mypage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h3&gt;&lt;p&gt;hexo默认生成的主题可能不满足用户需求，需要自己去&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;官网&lt;/font&gt;&lt;/a&gt;或者去&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;github&lt;/font&gt;&lt;/a&gt;上搜&lt;font color=&quot;blue&quot;&gt;hexo&lt;/font&gt;相关的主题&lt;/p&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;p&gt;以&lt;font color=&quot;blue&quot;&gt;hueman&lt;/font&gt;主题为例，从官网进入项目的&lt;font color=&quot;blue&quot;&gt;github&lt;/font&gt;地址，或者直接在&lt;font color=&quot;blue&quot;&gt;github&lt;/font&gt;搜项目名称找到之后down下来，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后修改&lt;font color=&quot;blue&quot;&gt;_config.yml&lt;/font&gt;的配置文件，搜索&lt;font color=&quot;blue&quot;&gt;theme&lt;/font&gt;,改为&lt;font color=&quot;blue&quot;&gt;hueman&lt;/font&gt;。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## theme: landscape 改为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: hueman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在&lt;font color=&quot;blue&quot;&gt;themes&amp;gt;hueman&lt;/font&gt;文件夹下有个&lt;font color=&quot;blue&quot;&gt;_config.yml.example&lt;/font&gt;文件，这个文件只是官方的示例，需要自己再新建个&lt;font color=&quot;blue&quot;&gt;_config.yml&lt;/font&gt;文件，否则主题不生效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;菜单栏&quot;&gt;&lt;a href=&quot;#菜单栏&quot; class=&quot;headerlink&quot; title=&quot;菜单栏&quot;&gt;&lt;/a&gt;菜单栏&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这里我们把最外面的&lt;font color=&quot;blue&quot;&gt;_config.yml&lt;/font&gt;文件叫做&lt;em&gt;站点配置&lt;/em&gt;文件，把主题文件夹里的&lt;font color=&quot;blue&quot;&gt;_config.yml&lt;/font&gt;文件叫做&lt;em&gt;主题配置&lt;/em&gt;文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果想增加菜单选项，只需要在&lt;em&gt;主题配置&lt;/em&gt;文件中搜索&lt;font color=&quot;blue&quot;&gt;menu&lt;/font&gt;增加路径：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    Home: /hexo-theme-hueman/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Delete this row if you don&amp;apos;t want categories in your header nav bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   address: /address/index.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    About: /about/index.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，生成对应的页面&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page address&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前面我们已经配置过模板文件，直接生成页面就可以&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;个性化设置&quot;&gt;&lt;a href=&quot;#个性化设置&quot; class=&quot;headerlink&quot; title=&quot;个性化设置&quot;&gt;&lt;/a&gt;个性化设置&lt;/h4&gt;&lt;p&gt;文章首张图片会生成缩略图&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 我的第一篇文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-04-03 10:16:25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 前端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 后端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 技术&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我的第一次写博客 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![测试](http://7xsiot.com2.z0.glb.clouddn.com/shenfu.jpg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsiot.com2.z0.glb.clouddn.com/suoluetu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们可以拿七牛云存储做图床，上传图片后会自动生成外链，如果想把图片链接设置成相对链接需要在&lt;font color=&quot;blue&quot;&gt;站点配置&lt;/font&gt;文件里修改&lt;font color=&quot;blue&quot;&gt;post_asset_folder&lt;/font&gt;改为true，当&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;blue&quot;&gt;hexo new 文章2&lt;/font&gt;的时候，post文件夹下除了生成&lt;font color=&quot;blue&quot;&gt;文章2.md&lt;/font&gt;,还会生成&lt;font color=&quot;blue&quot;&gt;文章2&lt;/font&gt;的文件夹，将图片放进去，用的时候直接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 文章2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-04-03 10:16:25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 前端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 后端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 技术&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 文章2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![img](shenfu.jpg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以显示出来。&lt;/p&gt;
&lt;h2 id=&quot;上传到github&quot;&gt;&lt;a href=&quot;#上传到github&quot; class=&quot;headerlink&quot; title=&quot;上传到github&quot;&gt;&lt;/a&gt;上传到github&lt;/h2&gt;&lt;p&gt;如何上传如何配置SSH，官方文档讲的最详细&lt;a href=&quot;https://hexo.io/zh-cn/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/zh-cn/docs/deployment.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo安装使用&quot;&gt;&lt;a href=&quot;#hexo安装使用&quot; class=&quot;headerlink&quot; title=&quot;hexo安装使用&quot;&gt;&lt;/a&gt;hexo安装使用&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架，Hexo使用Markdown（或其他渲染引擎）解
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>React学习系列（二）：ES6</title>
    <link href="http://yoursite.com/2016/04/01/React%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97(%E4%BA%8C)%EF%BC%9AES6/"/>
    <id>http://yoursite.com/2016/04/01/React学习系列(二)：ES6/</id>
    <published>2016-04-01T07:33:26.000Z</published>
    <updated>2016-04-05T02:30:14.510Z</updated>
    
    <content type="html">&lt;h1 id=&quot;ES6语法快餐，为开发做好铺垫&quot;&gt;&lt;a href=&quot;#ES6语法快餐，为开发做好铺垫&quot; class=&quot;headerlink&quot; title=&quot;ES6语法快餐，为开发做好铺垫&quot;&gt;&lt;/a&gt;ES6语法快餐，为开发做好铺垫&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;学习项目会经常用到的基本的ES6语法&lt;/strong&gt; 有时间可以看阮一峰老师出版的&lt;strong&gt;《ESMAScript 6入门（第二版）》&lt;/strong&gt;这本书，但是，往往在项目中实际用到的80%的语法只占ES6语法的20%，所以我们花点时间把这20%学好，那就差不多够用了，剩下的可以现学现用。&lt;br&gt;&lt;em&gt;阮老师那本书别看不厚，内容很充实&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;重要提示：本教程直接基于项目脚手架&lt;a href=&quot;https://github.com/shuaiguoisme/webpack-dev-boilerplate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;webpack-dev-boilerplate&lt;/font&gt;&lt;/a&gt;进行学习操作&lt;/strong&gt;&lt;br&gt;先在app下创建一个util目录，用于ES6基本语法的学习和测试。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd app &amp;amp;&amp;amp; mkdir util&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;export-import&quot;&gt;&lt;a href=&quot;#export-import&quot; class=&quot;headerlink&quot; title=&quot;export, import&quot;&gt;&lt;/a&gt;export, import&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;以前我们学习AMD和CMD规范，讨论用什么样的模块化规范比较合适，更有甚者，不得不使用UMD规范来做全兼容，现在好了，ES6在语言层面推出了模块化的写法。&lt;/p&gt;
&lt;p&gt;在util下面新建两个模块&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd util &amp;amp;&amp;amp; touch moduleA.js moduleB.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码清单：&lt;font color=&quot;blue&quot;&gt;app/util/moduleA.js&lt;/font&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export default function foo(x, y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return x * y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 另外几种导出的方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// function foo() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//   console.log(&amp;apos;foo&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// export &amp;#123; foo as default &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// export var a = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// export const PI = 3.14;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;export 是导出的意思&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export default function 函数名(item1,item2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      逻辑  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向外导出函数,也可以将函数提取出来，单独导出，export还可以导出变量,常量,对象…&lt;/p&gt;
&lt;p&gt;代码清单：&lt;font color=&quot;blue&quot;&gt;app/util/moduleB.js&lt;/font&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import moduleA from &amp;apos;./moduleA&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log( moduleA(2, 3) );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码清单：&lt;font color=&quot;blue&quot;&gt;app/index.js&lt;/font&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import moduleB from &amp;apos;./util/moduleB &amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终运行打印出结果：6；&lt;/p&gt;
&lt;h1 id=&quot;class-extends-super&quot;&gt;&lt;a href=&quot;#class-extends-super&quot; class=&quot;headerlink&quot; title=&quot;class, extends, super &quot;&gt;&lt;/a&gt;class, extends, super &lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;回想之前，如果我们需要模拟一个js的类，一般会采用构造函数加原型的方式。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 直接从阮一峰老师书上拿过来的例子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function Point(x,y)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  this.x = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  this.y = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point.prototype.toString = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return &amp;apos;(&amp;apos; + this.x + &amp;apos;, &amp;apos; + this.y + &amp;apos;)&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;而现在我们可以使用class来定义一个类 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;代码清单：&amp;lt;font color=blue&amp;gt;app/util/class.js&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而现在我们可以使用class来定义一个类 代码清单：&lt;font color=&quot;blue&quot;&gt;app/util/class.js&lt;/font&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strcit&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export default class Point &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // constructor方法是类的默认方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  constructor(x, y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.x = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.y = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 这里定义的都是类的公共方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 等同于Point.prototype.toString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  toString() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;apos;(&amp;apos; + this.x + &amp;apos;, &amp;apos; + this.y + &amp;apos;)&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var point = new Point(2, 3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(point.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(point.hasOwnProperty(&amp;apos;x&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(point.hasOwnProperty(&amp;apos;y&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(point.hasOwnProperty(&amp;apos;toString&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(point.__proto__.hasOwnProperty(&amp;apos;toString&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在moduleB中来import这个文件进行运行。 代码清单：&lt;font color=&quot;blue&quot;&gt;app/util/moduleB.js&lt;/font&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// import moduleA from &amp;apos;./moduleA&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import Point from &amp;apos;./class.js&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;arrow-function-amp-amp-template-string&quot;&gt;&lt;a href=&quot;#arrow-function-amp-amp-template-string&quot; class=&quot;headerlink&quot; title=&quot;arrow function &amp;amp;&amp;amp; template string&quot;&gt;&lt;/a&gt;arrow function &amp;amp;&amp;amp; template string&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;arrow function译名即为箭头函数，这早已不是一个新名词，下面简单看一下它的写法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Animal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    constructor(name)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // type = &amp;apos;water&amp;apos;这里的意思是当type未传值的时候默认是&amp;apos;water&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    drink(type = &amp;apos;water&amp;apos;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 使用了箭头函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setInterval( () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 模板字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            console.log(`$&amp;#123;this.name&amp;#125; want to drink $&amp;#123;type&amp;#125;`)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, 1000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let pig = new Animal(&amp;apos;pig&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(pig.drink(&amp;apos;milk&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export default Animal;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;destructuring&quot;&gt;&lt;a href=&quot;#destructuring&quot; class=&quot;headerlink&quot; title=&quot;destructuring&quot;&gt;&lt;/a&gt;destructuring&lt;/h1&gt;&lt;p&gt;destructuring是解构的意思，ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。来两个例子看看大家就明白了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 数组的解构赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let [foo, [[bar], baz]] = [1, [[2], 3]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(foo); // 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(bar); // 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(baz); // 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 对象的解构赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var &amp;#123; foo, bar &amp;#125; = &amp;#123; foo: &amp;quot;aaa&amp;quot;, bar: &amp;quot;bbb&amp;quot; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(foo);   // &amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(bar );  // &amp;quot;bbb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 字符串的解构赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const [a, b, c, d, e] = &amp;apos;hello&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(a + b + c + e); // &amp;apos;hello&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;rest&quot;&gt;&lt;a href=&quot;#rest&quot; class=&quot;headerlink&quot; title=&quot;rest&quot;&gt;&lt;/a&gt;rest&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;我们知道JS函数内部有个arguments对象，可以拿到全部实参。现在ES6给我们带来了一个新的对象，可以拿到除开始参数外的参数，即剩余参数，听起来好屌的样子，我们来段代码。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// rest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function restFunc(a, ...rest) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(rest)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restFunc(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;restFunc(1, 2, 3, 4);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;font color=&quot;blue&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ES6语法快餐，为开发做好铺垫&quot;&gt;&lt;a href=&quot;#ES6语法快餐，为开发做好铺垫&quot; class=&quot;headerlink&quot; title=&quot;ES6语法快餐，为开发做好铺垫&quot;&gt;&lt;/a&gt;ES6语法快餐，为开发做好铺垫&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;blockquote&gt;

    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
      <category term="ES2015" scheme="http://yoursite.com/tags/ES2015/"/>
    
  </entry>
  
  <entry>
    <title>React学习系列（一）：Babel</title>
    <link href="http://yoursite.com/2016/03/31/React%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9ABabel/"/>
    <id>http://yoursite.com/2016/03/31/React学习系列一：Babel/</id>
    <published>2016-03-30T16:00:00.000Z</published>
    <updated>2016-04-03T15:53:08.587Z</updated>
    
    <content type="html">&lt;p&gt;转载自&lt;a href=&quot;http://guoyongfeng.github.io/idoc/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;YOFFE技术分享-郭永峰老师的课件（不算侵权、不算侵权、不算侵权）&lt;/font&gt;&lt;/a&gt;&amp;nbsp;&lt;br&gt;&lt;a href=&quot;https://github.com/shuaiguoisme/babel-starter-kit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Babel初学者教程包&lt;/font&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写在前面的话：&amp;nbsp;&lt;br&gt;先在电脑安装node环境，&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node官网 &lt;font color=&quot;blue&quot;&gt;https://nodejs.org&lt;/font&gt;&lt;/a&gt;&amp;nbsp;&lt;br&gt;cli：就是命令行的意思&amp;nbsp;&lt;br&gt;&lt;strong&gt;看不下去就想想一个月&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;17、8k&lt;/em&gt;&lt;/strong&gt;，&lt;strong&gt;&lt;em&gt;20多k&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;的工资&lt;/strong&gt;&amp;nbsp;&lt;br&gt;多练多琢磨&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Babel&lt;/strong&gt; 是一个通用的多用途 JavaScript 编译器。通过 Babel 你可以使用（并创建）下一代的 JavaScript，以及下一代的 JavaScript 工具。&lt;/p&gt;
&lt;p&gt;作为一种语言，JavaScript 在不断发展，新的标准／提案和新的特性层出不穷。 在得到广泛普及之前，Babel 能够让你提前（甚至数年）使用它们。&lt;/p&gt;
&lt;p&gt;Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译（transpiling，是一个自造合成词，即转换＋编译。以下也简称为转译）。&lt;/p&gt;
&lt;p&gt;例如，Babel 能够将新的 ES2015 箭头函数语法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const square = n =&amp;gt; n * n;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;转译为：  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const square = function (n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return n * n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不过 Babel 的用途并不止于此，它支持语法扩展，能支持像 React 所用的 JSX 语法，同时还支持用于静态类型检查的流式语法（Flow Syntax）。&lt;/p&gt;
&lt;p&gt;更重要的是，Babel 的一切都是简单的插件，谁都可以创建自己的插件，利用 Babel 的全部威力去做任何事情。&lt;/p&gt;
&lt;p&gt;再进一步，Babel 自身被分解成了数个核心模块，任何人都可以利用它们来创建下一代的 JavaScript 工具。&lt;/p&gt;
&lt;p&gt;已经有很多人都这样做了，围绕着 Babel 涌现出了非常大规模和多样化的生态系统。 在这本手册中，我将介绍如何使用 Babel 的内建工具以及一些来自于社区的非常有用的东西。&lt;/p&gt;
&lt;h1 id=&quot;安装Babel&quot;&gt;&lt;a href=&quot;#安装Babel&quot; class=&quot;headerlink&quot; title=&quot;安装Babel&quot;&gt;&lt;/a&gt;安装Babel&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;由于 JavaScript 社区没有统一的构建工具、框架、平台等等，因此 Babel 正式集成了对所有主流工具的支持。 从 Gulp 到 Browserify，从 Ember 到 Meteor，不管你的环境设置如何，Babel 都有正式的集成支持。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本手册的目的主要是介绍 Babel 内建方式的安装，不过你可以访问交互式的&lt;a href=&quot;http://babeljs.io/docs/setup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;安装页面&lt;/font&gt;&lt;/a&gt;来查看其它的整合方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;babel-cli&quot;&gt;&lt;a href=&quot;#babel-cli&quot; class=&quot;headerlink&quot; title=&quot;babel-cli&quot;&gt;&lt;/a&gt;babel-cli&lt;br&gt;&lt;/h2&gt;&lt;p&gt;Babel 的 CLI 是一种在命令行下使用 Babel 编译文件的简单方法。&lt;br&gt;让我们先全局安装它来学习基础知识。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --global babel-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g babel-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们可以这样来编译我们的第一个文件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ babel my-file.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这将把编译后的结果直接输出至终端。使用 –out-file 或着 -o 可以将结果写入到指定的文件。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ babel example.js --out-file compiled.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ babel example.js -o compiled.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们想把一个目录整个编译成一个新的目录，可以使用–out-dir或者-d。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ babel src --out-dir lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ babel src -d lib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;在项目内运行-Babel-CLI&quot;&gt;&lt;a href=&quot;#在项目内运行-Babel-CLI&quot; class=&quot;headerlink&quot; title=&quot;在项目内运行 Babel CLI&quot;&gt;&lt;/a&gt;在项目内运行 Babel CLI&lt;br&gt;&lt;/h2&gt;&lt;p&gt;尽管你可以把 Babel CLI 全局安装在你的机器上，但是按项目逐个安装在本地会更好(这里的本地是项目所在的文件夹)。&lt;br&gt;有两个主要的原因:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在同一台机器上的不同项目或许会依赖不同版本的 Babel 并允许你有选择的更新。&lt;/li&gt;
&lt;li&gt;这意味着你对工作环境没有隐式依赖，这让你的项目有很好的可移植性并且易于安装。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;要在（项目）本地安装 Babel CLI 可以运行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：由于全局运行 Babel 是一个坏习惯，如果你要卸载全局安装的版本可以运行：npm uninstall –global babel-cli。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装完成后，你的 package.json 应该如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;name&amp;quot;: &amp;quot;my-project&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;devDependencies&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;babel-cli&amp;quot;: &amp;quot;^6.0.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在，我们不直接从命令行运行 Babel 了，取而代之我们将把运行命令写在 npm scripts 里，这样可以使用 Babel 的本地版本。&lt;/p&gt;
&lt;p&gt;只需将 “scripts” 字段添加到你的 package.json 文件内并且把 babel 命令写成 build 字段。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;name&amp;quot;: &amp;quot;my-project&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   &amp;quot;scripts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;build&amp;quot;: &amp;quot;babel src -d lib&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;devDependencies&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;babel-cli&amp;quot;: &amp;quot;^6.0.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在可以在终端里运行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm src -d lib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这将以与之前同样的方式运行 Babel，但这一次我们使用的是本地副本。&lt;/p&gt;
&lt;h2 id=&quot;babel-register&quot;&gt;&lt;a href=&quot;#babel-register&quot; class=&quot;headerlink&quot; title=&quot;babel-register&quot;&gt;&lt;/a&gt;babel-register&lt;br&gt;&lt;/h2&gt;&lt;p&gt;下一个常用的运行 Babel 的方法是通过 babel-register。这种方法只需要引入文件就可以运行 Babel，或许能更好地融入你的项目设置。（即用script标签引入）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但请注意这种方法并不适合正式产品环境使用。 直接部署用此方式编译的代码不是好的做法。 在部署之前预先编译会更好。 不过用在构建脚本(gulp等构件工具)或是其他本地运行的脚本中是非常合适的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让我们先在项目中创建 index.js 文件。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;console.log(&amp;apos;hello world&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们用 node index.js 来运行它是不会使用 Babel 来编译的。所以我们需要设置 babel-register。&lt;/p&gt;
&lt;p&gt;首先安装 babel-register。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-register&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接着，在项目中创建 register.js 文件并添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;require(&amp;quot;babel-register&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require(&amp;quot;./index.js&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样做可以把 Babel 注册到 Node 的模块系统中并开始编译其中 require 的所有文件。&lt;/p&gt;
&lt;p&gt;现在我们可以使用 register.js 来代替 node index.js 来运行了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node register.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：你不能在你要编译的文件内同时注册 Babel，因为 node 会在 Babel 编译它之前就将它执行了。&lt;br&gt;require(“babel-register”);&lt;br&gt;// 未编译的：&lt;br&gt;console.log(“Hello world!”);&lt;br&gt;即在俩者之外的第三方文件注册babel并引入需要编译的文件，当node文件名时，会先编译文件再执行文件&lt;br&gt;$ node register&lt;br&gt;//编译的&lt;br&gt;hello world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;babel-node&quot;&gt;&lt;a href=&quot;#babel-node&quot; class=&quot;headerlink&quot; title=&quot;babel-node&quot;&gt;&lt;/a&gt;babel-node&lt;br&gt;&lt;/h2&gt;&lt;p&gt;如果你要用 node CLI 来运行代码，那么整合 Babel 最简单的方式就是使用 babel-node CLI，它是 node CLI 的替代品。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但请注意这种方法并不适合正式产品环境使用。 直接部署用此方式编译的代码不是好的做法。 在部署之前预先编译会更好。 不过用在构建脚本或是其他本地运行的脚本中是非常合适的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先确保 babel-cli 已经安装了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果你不清楚为什么要安装在本地，请阅读上面在项目内运行 Babel CLI 的部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后用 babel-node 来替代 node 运行所有的代码 。&lt;br&gt;如果用 npm scripts 的话只需要这样做：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;scripts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-     &amp;quot;script-name&amp;quot;: &amp;quot;node script.js&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;script-name&amp;quot;: &amp;quot;babel-node script.js&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;要不然的话你需要写全 babel-node 的路径。&lt;/p&gt;
&lt;h2 id=&quot;babel-core&quot;&gt;&lt;a href=&quot;#babel-core&quot; class=&quot;headerlink&quot; title=&quot;babel-core&quot;&gt;&lt;/a&gt;babel-core&lt;br&gt;&lt;/h2&gt;&lt;p&gt;如果你需要以编程的方式来使用 Babel，可以使用 babel-core 这个包。&lt;br&gt;首先安装 babel-core。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install babel-core&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var babel = require(&amp;quot;babel-core&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;字符串形式的 JavaScript 代码可以直接使用 babel.transform 来编译。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;babel.transform(&amp;quot;code();&amp;quot;, options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果是文件的话，可以使用异步 api：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;babel.transformFile(&amp;quot;filename.js&amp;quot;, options, function(err, result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result; // =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者是同步 api：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;babel.transformFileSync(&amp;quot;filename.js&amp;quot;, options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;要是已经有一个 Babel AST（抽象语法树）了就可以直接从 AST 进行转换。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;babel.transformFromAst(ast, code, options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// =&amp;gt; &amp;#123; code, map, ast &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于上述所有方法，options 指的都是 &lt;a href=&quot;http://babeljs.io/docs/usage/options/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;http://babeljs.io/docs/usage/options/&lt;/font&gt;&lt;/a&gt; (官网API)&lt;/p&gt;
&lt;h1 id=&quot;配置-Babel&quot;&gt;&lt;a href=&quot;#配置-Babel&quot; class=&quot;headerlink&quot; title=&quot;配置 Babel&quot;&gt;&lt;/a&gt;配置 Babel&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;你或许已经注意到了，目前为止通过运行 Babel 自己我们并没能“翻译”代码，而仅仅是把代码从一处拷贝到了另一处。&lt;/p&gt;
&lt;p&gt;这是因为我们还没告诉 Babel 要做什么。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于 Babel 是一个可以用各种花样去使用的通用编译器，因此默认情况下它反而什么都不做。你必须明确地告诉 Babel 应该要做什么。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以通过安装插件（plugins）或预设（presets，也就是一组插件）来指示 Babel 去做什么事情。&lt;/p&gt;
&lt;h2 id=&quot;babelrc&quot;&gt;&lt;a href=&quot;#babelrc&quot; class=&quot;headerlink&quot; title=&quot;.babelrc&quot;&gt;&lt;/a&gt;.babelrc&lt;br&gt;&lt;/h2&gt;&lt;p&gt;在我们告诉 Babel 该做什么之前，我们需要创建一个配置文件。你需要做的就是在项目的根路径下创建 .babelrc 文件。&lt;br&gt;然后输入以下内容作为开始：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;presets&amp;quot;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;plugins&amp;quot;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个文件就是用来让 Babel 做你要它做的事情的配置文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：尽管你也可以用其他方式给 Babel 传递选项，但 .babelrc 文件是约定也是最好的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;babel-preset-es2015&quot;&gt;&lt;a href=&quot;#babel-preset-es2015&quot; class=&quot;headerlink&quot; title=&quot;babel-preset-es2015&quot;&gt;&lt;/a&gt;babel-preset-es2015&lt;br&gt;&lt;/h2&gt;&lt;p&gt;我们先从让 Babel 把 ES2015（最新版本的 JavaScript 标准，也叫做 ES6）编译成 ES5（现今在大多数 JavaScript 环境下可用的版本）开始吧。&lt;br&gt;我们需要安装 “es2015” Babel 预设：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-preset-es2015&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们修改 .babelrc 来包含这个预设。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;presets&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;es2015&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;babel-preset-react&quot;&gt;&lt;a href=&quot;#babel-preset-react&quot; class=&quot;headerlink&quot; title=&quot;babel-preset-react&quot;&gt;&lt;/a&gt;babel-preset-react&lt;br&gt;&lt;/h2&gt;&lt;p&gt;设置 React 一样容易。只需要安装这个预设：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-preset-react&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在 .babelrc 文件里补充：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;presets&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;es2015&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;react&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;babel-preset-stage-x&quot;&gt;&lt;a href=&quot;#babel-preset-stage-x&quot; class=&quot;headerlink&quot; title=&quot;babel-preset-stage-x&quot;&gt;&lt;/a&gt;babel-preset-stage-x&lt;br&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;下面的不好理解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JavaScript 还有一些提案，正在积极通过 TC39（ECMAScript 标准背后的技术委员会）的流程成为标准的一部分。&lt;/p&gt;
&lt;p&gt;这个流程分为 5（0－4）个阶段。 随着提案得到越多的关注就越有可能被标准采纳，于是他们就继续通过各个阶段，最终在阶段 4 被标准正式采纳。&lt;/p&gt;
&lt;p&gt;以下是4 个不同阶段的（打包的）预设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;babel-preset-stage-0&lt;/li&gt;
&lt;li&gt;babel-preset-stage-1&lt;/li&gt;
&lt;li&gt;babel-preset-stage-2&lt;/li&gt;
&lt;li&gt;babel-preset-stage-3&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 stage-4 预设是不存在的因为它就是上面的 es2015 预设。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上每种预设都依赖于紧随的后期阶段预设。例如，babel-preset-stage-1 依赖 babel-preset-stage-2，后者又依赖 babel-preset-stage-3。&lt;br&gt;使用的时候只需要安装你想要的阶段就可以了：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-preset-stage-2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后添加进你的 .babelrc 配置文件。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;presets&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;quot;es2015&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;quot;react&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+           &amp;quot;stage-2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;quot;plugins&amp;quot;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;执行Babel生成的代码&quot;&gt;&lt;a href=&quot;#执行Babel生成的代码&quot; class=&quot;headerlink&quot; title=&quot;执行Babel生成的代码&quot;&gt;&lt;/a&gt;执行Babel生成的代码&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;即便你已经用 Babel 编译了你的代码，但这还不算完。&lt;/p&gt;
&lt;h2 id=&quot;babel-polyfill&quot;&gt;&lt;a href=&quot;#babel-polyfill&quot; class=&quot;headerlink&quot; title=&quot;babel-polyfill&quot;&gt;&lt;/a&gt;babel-polyfill&lt;br&gt;&lt;/h2&gt;&lt;p&gt;Babel 几乎可以编译所有时新的 JavaScript 语法，但对于 APIs 来说却并非如此。&lt;br&gt;比方说，下列含有箭头函数的需要编译的代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function addAll() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		return Array.from(arguments).reduce((a, b) =&amp;gt; a + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终会变成这样：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function addAll() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return Array.from(arguments).reduce(function(a, b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然而，它依然无法随处可用因为不是所有的 JavaScript 环境都支持 Array.from。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Uncaught TypeError: Array.from is not a function&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了解决这个问题，我们使用一种叫做 &lt;a href=&quot;https://remysharp.com/2010/10/08/what-is-a-polyfill&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Polyfill（代码填充，也可译作兼容性补丁）&lt;/font&gt;&lt;/a&gt; 的技术。 简单地说，polyfill 即是在当前运行环境中用来复制（意指模拟性的复制，而不是拷贝）尚不存在的原生 api 的代码。 能让你提前使用还不可用的 APIs，Array.from 就是一个例子。&lt;br&gt;Babel 用了优秀的&lt;a href=&quot;https://github.com/zloirock/core-js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;core-js&lt;/font&gt;&lt;/a&gt;用作 polyfill，并且还有定制化的&lt;a href=&quot;https://github.com/facebook/regenerator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;regenerator&lt;/font&gt;&lt;/a&gt;来让 generators（生成器）和 async functions（异步函数）正常工作。&lt;br&gt;要使用 Babel polyfill，首先用 npm 安装它：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save babel-polyfill&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后只需要在文件顶部导入 polyfill 就可以了：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import &amp;quot;babel-polyfill&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;babel-runtime&quot;&gt;&lt;a href=&quot;#babel-runtime&quot; class=&quot;headerlink&quot; title=&quot;babel-runtime&quot;&gt;&lt;/a&gt;babel-runtime&lt;br&gt;&lt;/h2&gt;&lt;p&gt;为了实现 ECMAScript 规范的细节，Babel 会使用“助手”方法来保持生成代码的整洁。&lt;/p&gt;
&lt;p&gt;由于这些助手方法可能会特别长并且会被添加到每一个文件的顶部，因此你可以把它们统一移动到一个单一的“运行时（runtime）”中去。&lt;/p&gt;
&lt;p&gt;通过安装 babel-plugin-transform-runtime 和 babel-runtime 来开始。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-plugin-transform-runtime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save babel-runtime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后更新 .babelrc：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;transform-runtime&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;transform-es2015-classes&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在，Babel 会把这样的代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Foo &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		method() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编译成：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import _classCallCheck from &amp;quot;babel-runtime/helpers/classCallCheck&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import _createClass from &amp;quot;babel-runtime/helpers/createClass&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let Foo = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  function Foo() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _classCallCheck(this, Foo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _createClass(Foo, [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key: &amp;quot;method&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: function method() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return Foo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就不需要把 _classCallCheck 和 _createClass 这两个助手方法放进每一个需要的文件里去了。&lt;/p&gt;
&lt;h1 id=&quot;配置Babel（进阶）&quot;&gt;&lt;a href=&quot;#配置Babel（进阶）&quot; class=&quot;headerlink&quot; title=&quot;配置Babel（进阶）&quot;&gt;&lt;/a&gt;配置Babel（进阶）&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;大多数人使用 Babel 的内建预设就足够了，不过 Babel 提供了更多更细粒度的能力。&lt;/p&gt;
&lt;h2 id=&quot;手动指定插件&quot;&gt;&lt;a href=&quot;#手动指定插件&quot; class=&quot;headerlink&quot; title=&quot;手动指定插件&quot;&gt;&lt;/a&gt;手动指定插件&lt;br&gt;&lt;/h2&gt;&lt;p&gt;Babel 预设就是一些预先配置好的插件的集合，如果你想要做一些不一样的事情你会手动去设定插件，这和使用预设几乎完全相同。&lt;/p&gt;
&lt;p&gt;首先安装插件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev babel-plugin-transform-es2015-classes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后往 .babelrc 文件添加 plugins 字段。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   &amp;quot;plugins&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;transform-es2015-classes&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这能让你对正在使用的转换器进行更细致的控制。&lt;/p&gt;
&lt;h2 id=&quot;插件选项&quot;&gt;&lt;a href=&quot;#插件选项&quot; class=&quot;headerlink&quot; title=&quot;插件选项&quot;&gt;&lt;/a&gt;插件选项&lt;br&gt;&lt;/h2&gt;&lt;p&gt;很多插件也有选项用于配置他们自身的行为。 例如，很多转换器都有“宽松”模式，通过放弃一些标准中的行为来生成更简化且性能更好的代码。&lt;/p&gt;
&lt;p&gt;要为插件添加选项，只需要做出以下更改：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-     &amp;quot;transform-es2015-classes&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     [&amp;quot;transform-es2015-classes&amp;quot;, &amp;#123; &amp;quot;loose&amp;quot;: true &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;接下来几周内我会更新插件文档来详细介绍每一个选项。&lt;a href=&quot;https://twitter.com/thejameskyle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;关注我以获知更新&lt;/font&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;基于环境自定义-Babel&quot;&gt;&lt;a href=&quot;#基于环境自定义-Babel&quot; class=&quot;headerlink&quot; title=&quot;基于环境自定义 Babel&quot;&gt;&lt;/a&gt;基于环境自定义 Babel&lt;br&gt;&lt;/h2&gt;&lt;p&gt;巴贝尔插件解决许多不同的问题。 其中大多数是开发工具，可以帮助你调试代码或是与工具集成。 也有大量的插件用于在生产环境中优化你的代码。&lt;br&gt;因此，想要基于环境来配置 Babel 是很常见的。你可以轻松的使用 .babelrc 文件来达成目的。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;presets&amp;quot;: [&amp;quot;es2015&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   &amp;quot;env&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;development&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+       &amp;quot;plugins&amp;quot;: [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;production&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+       &amp;quot;plugins&amp;quot;: [...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Babel&lt;/strong&gt; 将根据当前环境来开启 env 下的配置。&lt;/p&gt;
&lt;p&gt;当前环境可以使用 process.env.BABEL_ENV 来获得。 如果 BABEL_ENV 不可用，将会替换成 NODE_ENV，并且如果后者也没有设置，那么缺省值是”development”。&lt;br&gt;&lt;strong&gt;Unix&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ BABEL_ENV=production [COMMAND]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ NODE_ENV=production [COMMAND]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ SET BABEL_ENV=production&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ [COMMAND]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：[COMMAND] 指的是任意一个用来运行 Babel 的命令（如：babel，babel-node，或是 node，如果你使用了 register 钩子的话）。&lt;br&gt;&lt;strong&gt;提示&lt;/strong&gt;：如果你想要让命令能够跨 unix 和 windows 平台运行的话，可以使用 cross-env。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;制作你自己的预设（preset）&quot;&gt;&lt;a href=&quot;#制作你自己的预设（preset）&quot; class=&quot;headerlink&quot; title=&quot;制作你自己的预设（preset）&quot;&gt;&lt;/a&gt;制作你自己的预设（preset）&lt;br&gt;&lt;/h2&gt;&lt;p&gt;手动指定插件？插件选项？环境特定设置？所有这些配置都会在你的项目里产生大量的重复工作。&lt;/p&gt;
&lt;p&gt;为此，我们鼓励社区创建自己的预设。 这可能是一个针对特定 node 版本的预设，或是适用于你整个公司的预设。.&lt;/p&gt;
&lt;p&gt;创建预设非常容易。比方说你这样一个 .babelrc 文件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;presets&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;es2015&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;react&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;plugins&amp;quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;transform-flow-strip-types&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你要做的就是依循命名约定 babel-preset-* 来创建一个新项目（请务必对这个命名约定保持责任心，也就是说不要滥用这个命名空间），然后创建两个文件。&lt;/p&gt;
&lt;p&gt;首先，创建一个 package.json，包括针对预设所必要的 dependencies。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;name&amp;quot;: &amp;quot;babel-preset-my-awesome-preset&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;author&amp;quot;: &amp;quot;James Kyle &amp;lt;me@thejameskyle.com&amp;gt;&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;dependencies&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;babel-preset-es2015&amp;quot;: &amp;quot;^6.3.13&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;babel-preset-react&amp;quot;: &amp;quot;^6.3.13&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;babel-plugin-transform-flow-strip-types&amp;quot;: &amp;quot;^6.3.15&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后创建 index.js 文件用于导出 .babelrc 的内容，使用对应的 require 调用来替换 plugins／presets 字符串。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  presets: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    require(&amp;quot;babel-preset-es2015&amp;quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    require(&amp;quot;babel-preset-react&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    require(&amp;quot;babel-plugin-transform-flow-strip-types&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后只需要发布到 npm 于是你就可以像其它预设一样来使用你的预设了。&lt;/p&gt;
&lt;h1 id=&quot;Babel-和其他工具&quot;&gt;&lt;a href=&quot;#Babel-和其他工具&quot; class=&quot;headerlink&quot; title=&quot;Babel 和其他工具&quot;&gt;&lt;/a&gt;Babel 和其他工具&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;一旦你掌握的窍门，安装 Babel 还是十分简明的，不过和其他工具搭配在一起就会变得困难多了。 不过我们一直在与其他项目密切合作以确保这种体验尽可能简单。&lt;/p&gt;
&lt;h2 id=&quot;静态分析工具&quot;&gt;&lt;a href=&quot;#静态分析工具&quot; class=&quot;headerlink&quot; title=&quot;静态分析工具&quot;&gt;&lt;/a&gt;静态分析工具&lt;br&gt;&lt;/h2&gt;&lt;p&gt;新标准为语言带来了许多新的语法，静态分析工具正在将此利用起来。&lt;/p&gt;
&lt;h2 id=&quot;语法检查（Linting）&quot;&gt;&lt;a href=&quot;#语法检查（Linting）&quot; class=&quot;headerlink&quot; title=&quot;语法检查（Linting）&quot;&gt;&lt;/a&gt;语法检查（Linting）&lt;br&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://eslint.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;ESLint&lt;/font&gt;&lt;/a&gt; 是最流行的语法检查工具之一，因此我们维护了一个官方的 babel-eslint 整合软件包。&lt;/p&gt;
&lt;p&gt;首先安装 eslint 和 babel-eslint。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save-dev eslint babel-eslint&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：兼容 Babel 6 的 babel-eslint 目前正处于预发行版本。 安装&lt;a href=&quot;https://github.com/babel/babel-eslint/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;最新的&lt;/font&gt;&lt;/a&gt; 5.0 beta 版来兼容 Babel 6。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后创建或使用项目现有的 .eslintrc 文件并设置 parser 为 babel-eslint。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   &amp;quot;parser&amp;quot;: &amp;quot;babel-eslint&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;rules&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在添加一个 lint 任务到 npm 的 package.json 脚本中：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;name&amp;quot;: &amp;quot;my-module&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;scripts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &amp;quot;lint&amp;quot;: &amp;quot;eslint my-files.js&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;devDependencies&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;babel-eslint&amp;quot;: &amp;quot;...&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;quot;eslint&amp;quot;: &amp;quot;...&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接着只需要运行这个任务就一切就绪了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm run lint&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;详细信息请咨询 &lt;a href=&quot;https://github.com/babel/babel-eslint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;babel-eslint&lt;/font&gt;&lt;/a&gt; 或者 &lt;a href=&quot;http://eslint.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;eslint&lt;/font&gt;&lt;/a&gt;的文档。&lt;/p&gt;
&lt;h2 id=&quot;代码风格&quot;&gt;&lt;a href=&quot;#代码风格&quot; class=&quot;headerlink&quot; title=&quot;代码风格&quot;&gt;&lt;/a&gt;代码风格&lt;br&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JSCS&lt;/strong&gt; 是一个极受欢迎的工具，在语法检查的基础上更进一步检查代码自身的风格。 &lt;strong&gt;Babel&lt;/strong&gt; 和 &lt;strong&gt;JSCS&lt;/strong&gt; 项目的核心维护者之一（&lt;a href=&quot;https://github.com/hzoo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;@hzoo&lt;/font&gt;&lt;/a&gt;）维护着 &lt;strong&gt;JSCS&lt;/strong&gt; 的官方集成。&lt;/p&gt;
&lt;p&gt;更妙的是，JSCS 自己通过 –esnext 选项实现了这种集成，于是和 Babel 的集成就简化成了直接在命令行运行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jscs . --esnext&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者在 .jscsrc 文件里添加 esnext 选项。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;preset&amp;quot;: &amp;quot;airbnb&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+   &amp;quot;esnext&amp;quot;: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;详细信息请咨询 &lt;a href=&quot;https://github.com/jscs-dev/babel-jscs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;babel-jscs&lt;/font&gt;&lt;/a&gt; 或是 &lt;a href=&quot;http://jscs.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;jscs&lt;/font&gt;&lt;/a&gt; 的文档。&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;br&gt;&lt;/h2&gt;&lt;p&gt;使用 &lt;strong&gt;Babel&lt;/strong&gt;，&lt;strong&gt;ES2015&lt;/strong&gt;，还有 Flow 你可以对你的代码进行大量的推断。使用&lt;a href=&quot;https://github.com/jscs-dev/babel-jscs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt; documentation.js &lt;/font&gt;&lt;/a&gt; 可以非常简便地生成详细的 API 文档。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation.js&lt;/strong&gt; 使用 &lt;strong&gt;Babel&lt;/strong&gt; 来支持所有最新的语法，包括用于在你的代码中声明类型所用的 Flow 注解在内，&lt;/p&gt;
&lt;h2 id=&quot;框架&quot;&gt;&lt;a href=&quot;#框架&quot; class=&quot;headerlink&quot; title=&quot;框架&quot;&gt;&lt;/a&gt;框架&lt;/h2&gt;&lt;p&gt;所有主流的 &lt;strong&gt;JavaScript&lt;/strong&gt; 框架都正在努力调整他们的 &lt;strong&gt;APIs&lt;/strong&gt; 向这门语言的未来看齐。有鉴于此，配套工具方面已经做出了大量的工作。&lt;/p&gt;
&lt;p&gt;除了使用 &lt;strong&gt;Babel&lt;/strong&gt; 以外，框架更有条件去扩展 &lt;strong&gt;Babel&lt;/strong&gt; 来帮助他们提升用户体验。&lt;/p&gt;
&lt;h2 id=&quot;React&quot;&gt;&lt;a href=&quot;#React&quot; class=&quot;headerlink&quot; title=&quot;React&quot;&gt;&lt;/a&gt;React&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; 已经大幅改变了他们的 &lt;strong&gt;API&lt;/strong&gt; 以适应 &lt;strong&gt;ES2015&lt;/strong&gt; 的类语法（&lt;a href=&quot;http://babeljs.io/blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;此处了解更新的API&lt;/font&gt;&lt;/a&gt;）。 再者，&lt;strong&gt;React&lt;/strong&gt; 依赖 &lt;strong&gt;Babel&lt;/strong&gt; 来编译它的 &lt;strong&gt;JSX&lt;/strong&gt; 语法，并弃用了它自己的工具来支持 &lt;strong&gt;Babel&lt;/strong&gt;。 你可以按照上述说明安装 babel-preset-react 包来开始。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; 社区采用 &lt;strong&gt;Babel&lt;/strong&gt; 并围绕它来运行，现在社区已经创建了&lt;a href=&quot;https://www.npmjs.com/search?q=babel-plugin+react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;大量的转换器（transforms）&lt;/font&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;最令人瞩目的是 &lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;babel-plugin-react-transform&lt;/font&gt;&lt;/a&gt; 插件，它集成了大量&lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform#transforms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;React 专用转换器&lt;/font&gt;&lt;/a&gt; 可以启用诸如 &lt;em&gt;热模块&lt;/em&gt;、&lt;em&gt;重载&lt;/em&gt;等其他调试工具。&lt;/p&gt;
&lt;h2 id=&quot;文本编辑器和-IDEs（集成开发环境）&quot;&gt;&lt;a href=&quot;#文本编辑器和-IDEs（集成开发环境）&quot; class=&quot;headerlink&quot; title=&quot;文本编辑器和 IDEs（集成开发环境）&quot;&gt;&lt;/a&gt;文本编辑器和 IDEs（集成开发环境）&lt;br&gt;&lt;/h2&gt;&lt;p&gt;通过 &lt;strong&gt;Babel&lt;/strong&gt; 引入 &lt;strong&gt;ES2015&lt;/strong&gt;，&lt;strong&gt;JSX&lt;/strong&gt;，和流式语法固然是大有裨益，可如果你的文本编辑不支持那可就糟糕透了。 因此，别忘了为你的文本编辑器或是 &lt;strong&gt;IDE&lt;/strong&gt; 安装 &lt;strong&gt;Babel&lt;/strong&gt; 插件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sublime Text&lt;/li&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;Vim&lt;/li&gt;
&lt;li&gt;WebStorm&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;调试Babel&quot;&gt;&lt;a href=&quot;#调试Babel&quot; class=&quot;headerlink&quot; title=&quot;调试Babel&quot;&gt;&lt;/a&gt;调试Babel&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;h1 id=&quot;Babel-支持&quot;&gt;&lt;a href=&quot;#Babel-支持&quot; class=&quot;headerlink&quot; title=&quot;Babel 支持&quot;&gt;&lt;/a&gt;Babel 支持&lt;br&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;Babel 的社区非常庞大并且增长速度很快，伴随着我们成长的同时我们希望保证人们总能获取他们需要的所有资源。 所以我们提供了数种途径来提供支持。&lt;/p&gt;
&lt;p&gt;谨记在所有的这些沟通渠道里我们都共同遵守一套&lt;a href=&quot;https://github.com/babel/babel/blob/master/CODE_OF_CONDUCT.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;行为准则&lt;/font&gt;&lt;/a&gt;。 破坏准则的行为会被处理。 所以请阅读它并在与他人互动时注意自己的行为。&lt;/p&gt;
&lt;p&gt;同时我们也在寻求发展一个自我支持式的社区，为那些始终热诚奉献的人们。 如果别人问的问题你恰好知道答案，请不吝花费几分钟帮帮他们。 在此过程中也请尽力保持友善与相互理解。&lt;/p&gt;
&lt;h2 id=&quot;Babel-论坛&quot;&gt;&lt;a href=&quot;#Babel-论坛&quot; class=&quot;headerlink&quot; title=&quot;Babel 论坛&quot;&gt;&lt;/a&gt;Babel 论坛&lt;br&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.discourse.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Discourse&lt;/font&gt;&lt;/a&gt; 免费为我们提供了一个托管版本的论坛（我们爱死他们了！）。 如果你是个论坛控请不要错过 &lt;a href=&quot;https://discuss.babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;discuss.babeljs.io&lt;/font&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;Babel-聊天&quot;&gt;&lt;a href=&quot;#Babel-聊天&quot; class=&quot;headerlink&quot; title=&quot;Babel 聊天&quot;&gt;&lt;/a&gt;Babel 聊天&lt;br&gt;&lt;/h2&gt;&lt;p&gt;无人不爱 &lt;a href=&quot;https://slack.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Slack&lt;/font&gt;&lt;/a&gt;。如果你正在寻求来自社区的即时支持，那就来&lt;a href=&quot;https://slack.babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;slack.babeljs.io&lt;/font&gt;&lt;/a&gt;  和我们聊天吧。&lt;/p&gt;
&lt;h2 id=&quot;Babel-问题&quot;&gt;&lt;a href=&quot;#Babel-问题&quot; class=&quot;headerlink&quot; title=&quot;Babel 问题&quot;&gt;&lt;/a&gt;Babel 问题&lt;br&gt;&lt;/h2&gt;&lt;p&gt;Babel 使用了 &lt;a href=&quot;http://phabricator.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Phabricator&lt;/font&gt;&lt;/a&gt; 这个非常棒的问题跟踪应用，这是一个能让 Github 问题追踪变成昨日黄花的开源软件开发平台。&lt;/p&gt;
&lt;p&gt;Babel 的 Phabricator 地址是：&lt;a href=&quot;https://phabricator.babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;phabricator.babeljs.io&lt;/font&gt;&lt;/a&gt; 你可以在 &lt;a href=&quot;https://phabricator.babeljs.io/maniphest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;maniphest&lt;/font&gt;&lt;/a&gt; 查看所有打开和关闭的问题。.&lt;/p&gt;
&lt;p&gt;如果你想要打开一个新的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://phabricator.babeljs.io/maniphest/query/advanced/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;先搜搜看有没有现存的类似问题&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://phabricator.babeljs.io/auth/start/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;登录&lt;/font&gt;&lt;/a&gt;或&lt;a href=&quot;https://phabricator.babeljs.io/auth/register/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;注册账号&lt;/font&gt;&lt;/a&gt;（你可以使用 GitHub, Facebook, Twitter, Google 等账号直接登录)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://phabricator.babeljs.io/maniphest/task/create/?projects=PHID-PROJ-2ufzspoyuk4udiwfnzls#R&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;创建新的错误报告&lt;/font&gt;&lt;/a&gt;或者&lt;a href=&quot;https://phabricator.babeljs.io/maniphest/task/create/?projects=PHID-PROJ-dfaevtocl5zgjtstjijd#R&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;请求新的功能特性&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;创建漂亮的-Babel-错误报告&quot;&gt;&lt;a href=&quot;#创建漂亮的-Babel-错误报告&quot; class=&quot;headerlink&quot; title=&quot;创建漂亮的 Babel 错误报告&quot;&gt;&lt;/a&gt;创建漂亮的 Babel 错误报告&lt;br&gt;&lt;/h2&gt;&lt;p&gt;Babel 的问题有时候很难远程调试，所以我们希望能获取尽可能详细的信息来帮助我们解决问题。 花点时间去撰写一份好的错误报告会让你的问题更快得到解决。&lt;/p&gt;
&lt;p&gt;首先，尝试隔离问题。 并非设置过程的每一步都是导致问题的原因。 如果你的问题是一段输入代码，试着尽可能把与问题不相关的代码都删除掉。&lt;/p&gt;
&lt;center&gt; &lt;iframe name=&quot;iframe_canvas&quot; src=&quot;http://douban.fm/partner/baidu/doubanradio&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; width=&quot;400&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt; &lt;/center&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;转载自&lt;a href=&quot;http://guoyongfeng.github.io/idoc/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;font color=&quot;blue&quot;&gt;YOFFE技术分享-郭永峰老师的课件（不算侵权、不算侵权、
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="Babel" scheme="http://yoursite.com/tags/Babel/"/>
    
  </entry>
  
</feed>
